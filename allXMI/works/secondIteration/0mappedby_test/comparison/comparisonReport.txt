public class Employee:
order of variables are different --> shouldn't matter?

oracle: public String Attribute, GPT: public Object Attribute
------>
 <packagedElement xmi:type="uml:Class" xmi:id="_MAYs5NyLEe6PTdpnUVL0jw" name="Employee">
    <ownedAttribute xmi:id="_MAYs5dyLEe6PTdpnUVL0jw" name="jobAssigne" visibility="public" type="_MAYs8tyLEe6PTdpnUVL0jw" aggregation="shared" association="_MAYs7NyLEe6PTdpnUVL0jw">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MAYs5tyLEe6PTdpnUVL0jw" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MAYs59yLEe6PTdpnUVL0jw"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_MAYs6NyLEe6PTdpnUVL0jw" name="jobAFaire" visibility="public" type="_MAYs8tyLEe6PTdpnUVL0jw" aggregation="shared" association="_MAYs79yLEe6PTdpnUVL0jw">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MAYs6dyLEe6PTdpnUVL0jw" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MAYs6tyLEe6PTdpnUVL0jw"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_MAYs69yLEe6PTdpnUVL0jw" name="Attribute" visibility="public" isUnique="false"/>
  </packagedElement>
-------->
The type is never directly mentioned within the XMI from Modelio, original XMI:
  <packagedElement xmi:type="uml:Class" xmi:id="_s8L6lABYEeWGWPf_MMgWkA" name="Employee">
    <ownedAttribute xmi:type="uml:Property" xmi:id="_s8L6lQBYEeWGWPf_MMgWkA" name="jobAssigne" visibility="public" type="_s8L6owBYEeWGWPf_MMgWkA" aggregation="shared" association="_s8L6nQBYEeWGWPf_MMgWkA">
      <ownedComment xmi:type="uml:Comment" xmi:id="_s8L6lgBYEeWGWPf_MMgWkA">
        <body>&lt;Enter note text here&gt;</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_s8L6lwBYEeWGWPf_MMgWkA" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_s8L6mABYEeWGWPf_MMgWkA"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_s8L6mQBYEeWGWPf_MMgWkA" name="jobAFaire" visibility="public" type="_s8L6owBYEeWGWPf_MMgWkA" aggregation="shared" association="_s8L6oABYEeWGWPf_MMgWkA">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_s8L6mgBYEeWGWPf_MMgWkA" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_s8L6mwBYEeWGWPf_MMgWkA"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_s8L6nABYEeWGWPf_MMgWkA" name="Attribute" visibility="public" isUnique="false">
      <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
    </ownedAttribute>
  </packagedElement>
------->
Original XMI mentions String, not a fault of GPT ====

jobAssigne and jobAFaire are both lists within oracle, in GPT they're variables:
<upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MAYs5tyLEe6PTdpnUVL0jw" value="*"/>
<lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MAYs59yLEe6PTdpnUVL0jw"/>
upper value in XMI is "*", should indicate list. Type is uml:LiteralUnlimitedNatural, fault of GPT --------

public class Job:
oracle: public String Attribute, GPT: public Object Attribute
Same as before, string is not specified in the XMI from modelio, not a fault of GPT ====

public class ManyFoo:
faaOne and faaTwo are both lists within oracle, in GPT they're variables:
------->
<ownedAttribute xmi:id="_MAYs9dyLEe6PTdpnUVL0jw" name="faaOne" visibility="public" type="_MAYtA9yLEe6PTdpnUVL0jw" aggregation="shared" association="_MAYs-9yLEe6PTdpnUVL0jw">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MAYs9tyLEe6PTdpnUVL0jw" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MAYs99yLEe6PTdpnUVL0jw"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_MAYs-NyLEe6PTdpnUVL0jw" name="faaTwo" visibility="public" type="_MAYtA9yLEe6PTdpnUVL0jw" aggregation="shared" association="_MAYs_9yLEe6PTdpnUVL0jw">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MAYs-dyLEe6PTdpnUVL0jw" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MAYs-tyLEe6PTdpnUVL0jw"/>
    </ownedAttribute>
------>
Should have been cuaght by GPT, fault of GPT ---------

------------------------------------------------------
Re-Execution? No.
Second Iteration? Yes.




